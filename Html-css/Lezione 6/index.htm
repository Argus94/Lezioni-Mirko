<!DOCTYPE html>
<html lang="it" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>Lezione 6 - I moduli</title>
    <link rel="stylesheet" href="style.css">
    <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Open+Sans:ital,wght@0,400;0,600;0,700;1,300&display=swap" rel="stylesheet">
  </head>
  <body>
    <h1>Lezione 6</h1>
    <hr>
    <h2>Le Palette colori</h2>
    <p>Le palette colori prendono il loro significato dalla tavoletta sottile che l'artista usa per dipingere, attigendo da li i colori che andrà ad usare per dipingere sulla sua tela. <br>
    Per questo motivo, quando si parla di palette colori, si intende un insieme di colori che verrà utilizzato dal web designer per un sito o una pagina (in questo caso la tela per l'artista).<br>
  Di seguito alcuni esempi di palette:</p>
  <div class="riquadro">
      <img src="palettes/palette1.jpg" alt="Palette 1">
      <img src="palettes/palette2.jpg" alt="Palette 1">
      <img src="palettes/palette3.png" alt="Palette 1">
      <img src="palettes/palette4.jpg" alt="Palette 1">
      <img src="palettes/palette5.jpg" alt="Palette 1">
      <img src="palettes/palette6.jpg" alt="Palette 1">
      <img src="palettes/palette7.jpg" alt="Palette 1">
      <img src="palettes/palette8.jpg" alt="Palette 1">
    </div>
    <p>Per altri esempi, clicca <a href="palettes">qui</a><br>
    Comunque online è possibile trovarne un'infinità, basta scrivere le giuste parole su google o utilizzare <a href="https://coolors.co/">Coolors</a> o <a href="https://paletton.com">Paletton</a>.
  </p>
  <h2>I Moduli</h2>
  <p>La forma più diffusa di "modulo" nel web è la semplice casella di ricerca, come quella di google. <br>
  Come funzionano i moduli?
  </p>
  <ol>
    <li>L'utente compila il modulo inserendo i vari dati nei vari campi.</li>
    <li>Al server viene inviato il nome di ogni controllo (o voce) del modulo, insieme al valore inserito.</li>
    <li>Il server elabora l'informazione utilizzando un linguaggio di programmazione come PHP, C#, java, Vb.net, o può memorizzare le informazioni in un database.</li>
    <li>Il server crea una nuova pagina da rinviare al browser, sulla base delle informazioni ricevute o meno.</li>

  </ol>
  <p>
  Quindi un modulo può essere dotato di vari tipi di <b>controlli</b>, ognuno dei quali raccoglie informazioni differenti.
  </p>
  <h3>Struttura di un modulo</h3>
  <h4>&lt;Il tag input&gt;</h4>
    <!-- Questo è il primo tag da conoscere, all'interno di esso verrà strutturato tutto il modulo -->
    <form action="http://www.esempio.com/iscriviti.php" method="get">
<!-- L'attributo action è indispensabile per il tag form, il suo valore è l'url della pagina sul server che riceverà i dati immessi -->
<!-- L'attributo method serve per decidere appunto il metodo con cui verranno inviati i dati e sono due: get o post.
- get aggiunge i valori a fine dell'indirizzo URL specificato nell'attributo action e spesso si usa per brevi moduli (come le caselle di ricerca)
o quando occorre soltanto ricevere dei dati da un database senza aggiungerne o eliminarne.
- post permette di inviare i valori all'intero delle intestazioni http: si utilizza in generale per moduli che inviano file, molti dati (tipo i form di google), dati riservati
per aggiungere o cancellare dati in un database.

Se non si utilizza l'attributo method i dati vengono inviati di standard con il get -->
<!-- Il tag Input -->
<p> Username: <input type="text" name="Username" maxlength="20" size="25"><br>
  Password <input type="password" name="Password" maxlength="8" size ="25"><br>
  <!-- Per input si intende lo spazio in cui è possibile inserire dati:
      Gli attributi che vediamo qui sono:
      type="text": Viene creata un'unica riga di tipo testuale
      name: Il server deve sapere a quale campo appartengono le info inserite dagli utenti.
      maxlenght:  Indica la quantità massime di lettere che si possono inserire nella casella.
      size: Indica la lunghezza visiva della casella espressa in spazi di lettere.
    type="password": Crea una casella di testo in cui i caratteri vengono mascherati. -->
    Genere: <input type="radio" name="Genere" Value="Maschio" checked="checked" /> Maschio
    <input type="radio" name="Genere" Value="Femmina" /> Femmina
    <input type="radio" name="Genere" Value="Altro"  /> Altro
    <!-- radio: Permette di creare dei pulsanti di opzioni di selezione.
    name: l'abbiamo già visto.
    Value: Con questo value intendiamo quello stesso valore che andiamo ad inserire noi in una casella di testo, solo che qui,
    anzi che farlo inserire all'utente, lo inseriamo noi in modo che l'utente, cliccando sul pallino sceglierà quel valore.
    checked: è un attributo che permette di far caricare una pagina con un pallino già checkato di default. -->
<br>
    Dispositivi in possesso:
    <ul>
     <li class="scelte"><input type="checkbox" name="Dispositivi" value="Smartphone" checked="checked" />Smartphone</li>
     <li class="scelte"><input type="checkbox" name="Dispositivi" value="TV" />TV</li>
     <li class="scelte"><input type="checkbox" name="Dispositivi" value="Computer" />Computer</li>
    </ul>
    <!-- Il checkbox invece permette di creare una selezione con spunte, quindi si ha la possibilità di scegliere più opzioni.
    Come è noto, è anche possibile inserirli in una lista. -->
</p>
<!-- Sempre con il tag <input> è possibile permettere all'utente di caricare un file su un database, in questi casi è consigliato usare il metodo post. -->
<p>Carica un file mp3:</p>
<input type="file" name="user-song" /> <!-- Questo è un tag vuoto, ovviamente -->
<!-- Sempre con input possiamo inserire il tasto che confermerà l'azione, in questo caso l'upload del file, 
però è possibile usarlo anche per inviare gli altri dati,  basta inserirlo all'interno del form per poter inviare tutto il modulo 
una volta cliccato sul tasto --><br>
<input type="submit" value="Carica" /> <!-- In questo caso, il value indicherà il nome del tasto -->

<p>Un esempio lo possiamo anche fare con un form che permette di inviare la propria mail, quindi ad esempio, iscriversi ad una newsletter:</p>
<form action="http://www.esempio.com/newsletter.php">
  <p>Iscriviti alla newsletter:</p>
  <input type="text" name="email" />
  <input type="submit" value="Iscriviti" name="iscriviti" /> <!-- Si può usare anche l'attributo name che però non è obbligatorio -->
  </form>
</form>
<p>Se invece vogliamo utilizzare un'immagine come pulsante di invio, basta assegnare all'attributo type il valore image</p>
<form>
  <p>Iscriviti:</p>
  <div class="iscrizione">
  <input type="text" value="email" class="spazi"/>
  <input type="image" src="img/bottone.png" class="spazi" /> <!-- Valgono le stesse regole che utilizziamo sul tag <img> quindi bisogna inserire 
  src, width ed height per regolarsi altezza e larghezza. -->
  
  </div>
  <input type="hidden" src="img/bottone.png" class="spazi" />
  <!-- Il valore hidden dell'attributo type permette di nascondere l'elemento input a cui viene contrassegnato.
  è utile per nascondere un pulsante invisibile che magari, tramite altro codice è possibile far visualizzare solo ad utenti loggati, oppure tramite codice javascript
  farlo apparire al verificarsi di un evento x.-->
</form>
<h4>Il tag &lt;textarea&gt;</h4>
<form action="http://www.esempio.com/commento.php" method="post">
<p>
Commento:<br>
<textarea name="message" cols="20" rows="4" onfocus="if(this.value==this.defaultValue)this.value='';" onblur="if(this.value=='')this.value=this.defaultValue;">Scrivi un commento </textarea>
<!-- textarea è un tag che permette di inserire un'area di testo nel form in cui è possibile scrivere testi più lunghi, spesso si usa come campo per inserire commenti.
I suoi attributi:
- name: il solito, da il nome al campo che poi verrà usato dal database per identificare quel valore input.
cols: Indica il numero di colonne
rows: indica il numero di righe
onfocus: è un attributo che significa "nel momento in cui è preso in considerazione", nel senso, quando l'utente ci clicca sopra va in onfocus; qui dentro si usa dello javascript per definire l'azione che verrà compiuta.
onblur: l'esatto contrario di onfocus ovvero "quando non è preso in considerazione", bisogna sempre specificare un'istruzione javascript. -->
</p>
</form>

</form>
<h4>Il tag &lt;select&gt;</h4>
<p>Il tag &lt;select&gt; permette di inserire una lista di scelte a tendina.</p>
<form action="http://www.esempio.com/modelli.php" method="get">
<p>
  <!-- Per utilizzare questo tag, oltre a scrivere questo tag, bisogna anche inserire le varie opzioni, quindi si userà il tag <option>.
  Un pò come il <li> per gli oggetti di lista-->
  Seleziona un modello: <select name="telefoni">
    <option value="S8">Samsung Galaxy S8</option>
    <option value="S10">Samsung Galaxy S10</option>
    <option value="S20">Samsung Galaxy S20</option>
  </select>
</p>
    </form>
    <h4>Altro modo per creare i pulsanti</h4>
    <p>Esiste un altro tag per creare i pulsanti ed è il tag &lt;button&gt;. <br>
    &#201; stato introdotto per offrire un maggiore controllo sull'aspetto dei pulsanti. <br>
    Infatti si possono combinare testi ed immagini fra il tag di apertura ed il tag di chiusura</p>
    
    <form id="modulo1" method="POST">
    Email: <input type="text" name="email" id="email" /> <br>
    Nome: <input type="text" name="Nome" id="nome" /> <br>
    Cognome: <input type="text" name="Cognome" id="cognome" /> <br>
    Compleanno: <input type="date" id="compleanno" name="compleanno"> 
    </form>
    <button type="submit" form="modulo1" formmethod="POST" formtarget="_blank" formaction="dati.php">Invia il modulo</button>
    <!--Le differenze tra il tag input e il tag button sta nella semplicità di quest'ultimo e anche nella possibilità di poterlo inserire fuori dal form e non per forza al suo interno.
    Naturalmente, se viene inserito all'esterno del form, si dovrà richiamare quest'ultimo tramite l'attributo form, inserendo il suo id.-->
  </body>
</html>
